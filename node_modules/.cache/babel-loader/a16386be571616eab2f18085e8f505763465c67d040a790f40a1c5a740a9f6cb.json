{"ast":null,"code":"export default {\n  name: \"UsersBox\",\n  data() {\n    return {\n      users: [],\n      editingId: \"\",\n      showAddBox: false,\n      user: {\n        img: \"janeth carton.jpg\",\n        name: \"\",\n        role: \"\",\n        liveLocation: \"Riviera State 32/106\",\n        address1: \"\",\n        address2: \"\",\n        phone: \"\",\n        coordinates: {\n          lat: 0,\n          lng: 0\n        }\n      }\n    };\n  },\n  async mounted() {\n    this.users = await this.fetchUsers();\n    console.log(this.users, \"this.users\");\n    this.showInfo = true;\n  },\n  methods: {\n    onlyNumberEdit(user) {\n      user.phone = user.phone.replace(/[^()+\\s,0-9]/gi, \"\");\n    },\n    onlyNumber() {\n      this.user.phone = this.user.phone.replace(/[^()+\\s,0-9]/gi, \"\");\n    },\n    async fetchUser(id) {\n      const res = await fetch(`api/users${id}`);\n      const data = await res.json();\n      return data;\n    },\n    async fetchUsers() {\n      const res = await fetch(\"api/users\");\n      const data = await res.json();\n      return data;\n    },\n    showBoxAddFunc() {\n      this.showAddBox = true;\n    },\n    showEditFunc(data) {\n      this.editingId = data.id;\n    },\n    async saveEdit(userData) {\n      await this.updateLocation(userData);\n      await fetch(`api/users/${userData.id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(userData)\n      }).then(response => response.json()).then(userData => console.log(userData));\n      this.editingId = \"\";\n    },\n    async addUser(newUser) {\n      const user = this.user;\n      await this.getLocation(newUser);\n      const res = await fetch(\"api/users\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n      });\n      const data = await res.json();\n      this.users = [...this.users, data];\n      console.log(this.user);\n      // this last line is to clear the text after submit\n      this.user = {\n        img: \"janeth carton.jpg\",\n        name: \"\",\n        role: \"\",\n        liveLocation: \"Riviera State 32/106\",\n        address1: \"\",\n        address2: \"\",\n        phone: \"\"\n      };\n      this.showAddBox = false;\n    },\n    async updateLocation(updatedUser) {\n      console.log(updatedUser.coordinates.lat, updatedUser.coordinates.lng, \"newUser\");\n      const API_KEY = process.env.API_KEY;\n      const API_URL = `https://maps.googleapis.com/maps/api/geocode/json?address=${updatedUser.address1}+${updatedUser.address2}&key=${API_KEY}`;\n      const apiResponse = await fetch(API_URL);\n      const locationData = await apiResponse.json();\n      updatedUser.coordinates.lat = locationData.results[0].geometry.location.lng;\n      updatedUser.coordinates.lng = locationData.results[0].geometry.location.lat;\n    },\n    async getLocation(newUser) {\n      const API_KEY = \"AIzaSyDkWzva7dAFQTO6rQVxZZawYTrcuo04PfI\";\n      const API_URL = `https://maps.googleapis.com/maps/api/geocode/json?address=${newUser.address1}+${newUser.address2}&key=${API_KEY}`;\n      const apiResponse = await fetch(API_URL);\n      const locationData = await apiResponse.json();\n      console.log(locationData, \"location\");\n      console.log(locationData.results[0].geometry.location.lng, \"lng\");\n      console.log(locationData.results[0].geometry.location.lat, \"lat\");\n      console.log(this.user.coordinates.lat, \"edit user lat\");\n      this.user.coordinates.lat = locationData.results[0].geometry.location.lng;\n      this.user.coordinates.lng = locationData.results[0].geometry.location.lat;\n    },\n    async deleteUser(id) {\n      const res = await fetch(`api/users/${id}`, {\n        method: \"DELETE\"\n      });\n      res.status === 200 ? this.users = this.users.filter(user => user.id !== id) : alert(\"Error deleting user\");\n    }\n  }\n};","map":{"version":3,"mappings":"AA6JA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;QACAC;QACAN;QACAO;QACAC;QACAC;QACAC;QACAC;QACAC;UACAC;UACAC;QACA;MACA;IACA;EACA;EACA;IACA;IACAC;IACA;EACA;EAEAC;IACAC;MACAZ;IACA;IACAa;MACA;IACA;IACA;MACA;MACA;MACA;IACA;IAEA;MACA;MACA;MACA;IACA;IAEAC;MACA;IACA;IACAC;MACA;IACA;IACA;MACA;MACA;QACAC;QACAC;UACA;QACA;QAEAC;MACA,GACAC,kCACAA;MAEA;IACA;IAEA;MACA;MACA;MAEA;QACAH;QACAC;UACA;QACA;QACAC;MACA;MACA;MACA;MAEAR;MACA;MACA;QACAT;QACAN;QACAO;QACAC;QACAC;QACAC;QACAC;MACA;MACA;IACA;IACA;MACAI,YACAU,6BACAA,6BACA,UACA;MACA;MACA;MACA;MACA;MACAA,8BACAC;MACAD,8BACAC;IACA;IAEA;MACA;MACA;MACA;MACA;MACAX;MACAA;MACAA;MACAA;MACA;MACA;IACA;IAEA;MACA;QACAM;MACA;MACAM,qBACA,yDACAC;IACA;EACA;AACA","names":["name","data","users","editingId","showAddBox","user","img","role","liveLocation","address1","address2","phone","coordinates","lat","lng","console","methods","onlyNumberEdit","onlyNumber","showBoxAddFunc","showEditFunc","method","headers","body","then","updatedUser","locationData","res","alert"],"sourceRoot":"src/components","sources":["Box.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"parent\">\n      <div v-if=\"!users\">Loading Please wait...</div>\n      <div\n        v-else\n        v-for=\"user in users\"\n        :key=\"user.id\"\n        class=\"content-box use-box\"\n      >\n        <div class=\"content\">\n          <div class=\"img-section\">\n            <img\n              alt=\"profile image\"\n              v-bind:src=\"\n                require(`@/assets/${user.img}`) || '../assets/monica smith.jpg'\n              \"\n            />\n\n            <input\n              type=\"text\"\n              v-model=\"user.role\"\n              v-if=\"editingId == user.id\"\n            />\n            <small v-else>{{ user.role }}</small>\n          </div>\n\n          <div class=\"info\">\n            <div class=\"top\">\n              <input\n                type=\"text\"\n                v-model=\"user.name\"\n                v-if=\"editingId == user.id\"\n              />\n              <h1 v-else>{{ user.name }}</h1>\n              <div class=\"location-box\">\n                <img\n                  class=\"location\"\n                  alt=\"location\"\n                  src=\"../assets/location.png\"\n                />\n                <p>{{ user.liveLocation }}</p>\n              </div>\n            </div>\n            <div>\n              <small class=\"bold\">Latitude: {{ user.coordinates.lat }} </small>\n              <small class=\"bold\">Longitude:{{ user.coordinates.lng }}</small>\n            </div>\n            <div class=\"bottom\">\n              <h2>Twitter, Inc.</h2>\n\n              <input\n                type=\"text\"\n                v-if=\"editingId == user.id\"\n                v-model=\"user.address1\"\n              />\n              <p v-else>{{ user.address1 }}</p>\n\n              <input\n                type=\"text\"\n                v-if=\"editingId == user.id\"\n                v-model=\"user.address2\"\n              />\n              <p v-else>{{ user.address2 }}</p>\n\n              <input\n                @keyup=\"onlyNumberEdit(user)\"\n                v-model=\"user.phone\"\n                v-if=\"editingId == user.id\"\n              />\n              <div v-else>\n                <p>P: {{ user.phone }}</p>\n                <p class=\"error\"></p>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"footer\">\n          <button\n            @click=\"saveEdit(user)\"\n            class=\"submit clickable\"\n            v-if=\"editingId == user.id\"\n          >\n            Save Changes\n          </button>\n\n          <div v-else>\n            <img\n              @click=\"showEditFunc(user)\"\n              class=\"footer-img clickable\"\n              alt=\"edit\"\n              src=\"../assets/edit.png\"\n            />\n            <img\n              @click=\"deleteUser(user.id)\"\n              class=\"footer-img clickable\"\n              alt=\"delete\"\n              src=\"../assets/trash.png\"\n            />\n          </div>\n        </div>\n      </div>\n      <div v-if=\"showAddBox\" class=\"content-box\">\n        <form @submit.prevent=\"addUser(user)\">\n          <div class=\"form\">\n            <img\n              class=\"new-img\"\n              alt=\"new img\"\n              src=\"../assets/janeth carton.jpg\"\n            />\n            <div class=\"form-container\">\n              <input\n                v-model=\"user.name\"\n                type=\"text\"\n                placeholder=\"Full Name...\"\n              />\n              <input v-model=\"user.role\" type=\"text\" placeholder=\"Role...\" />\n              <input\n                required\n                v-model=\"user.address1\"\n                type=\"text\"\n                placeholder=\"Address...\"\n              />\n              <input\n                required\n                v-model=\"user.address2\"\n                type=\"text\"\n                placeholder=\"Locality & Postalcode...\"\n              />\n\n              <input\n                @keyup=\"onlyNumber\"\n                v-model=\"user.phone\"\n                placeholder=\"Phone...\"\n              />\n            </div>\n          </div>\n          <div class=\"check footer\">\n            <button class=\"submit clickable\" type=\"submit\">Submit</button>\n          </div>\n        </form>\n      </div>\n\n      <div class=\"add-container\">\n        <img\n          @click=\"showBoxAddFunc\"\n          type=\"submit\"\n          class=\"add clickable\"\n          alt=\"add\"\n          src=\"../assets/add.png\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"UsersBox\",\n  data() {\n    return {\n      users: [],\n      editingId: \"\",\n      showAddBox: false,\n      user: {\n        img: \"janeth carton.jpg\",\n        name: \"\",\n        role: \"\",\n        liveLocation: \"Riviera State 32/106\",\n        address1: \"\",\n        address2: \"\",\n        phone: \"\",\n        coordinates: {\n          lat: 0,\n          lng: 0,\n        },\n      },\n    };\n  },\n  async mounted() {\n    this.users = await this.fetchUsers();\n    console.log(this.users, \"this.users\");\n    this.showInfo = true;\n  },\n\n  methods: {\n    onlyNumberEdit(user) {\n      user.phone = user.phone.replace(/[^()+\\s,0-9]/gi, \"\");\n    },\n    onlyNumber() {\n      this.user.phone = this.user.phone.replace(/[^()+\\s,0-9]/gi, \"\");\n    },\n    async fetchUser(id) {\n      const res = await fetch(`api/users${id}`);\n      const data = await res.json();\n      return data;\n    },\n\n    async fetchUsers() {\n      const res = await fetch(\"api/users\");\n      const data = await res.json();\n      return data;\n    },\n\n    showBoxAddFunc() {\n      this.showAddBox = true;\n    },\n    showEditFunc(data) {\n      this.editingId = data.id;\n    },\n    async saveEdit(userData) {\n      await this.updateLocation(userData);\n      await fetch(`api/users/${userData.id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n\n        body: JSON.stringify(userData),\n      })\n        .then((response) => response.json())\n        .then((userData) => console.log(userData));\n\n      this.editingId = \"\";\n    },\n\n    async addUser(newUser) {\n      const user = this.user;\n      await this.getLocation(newUser);\n\n      const res = await fetch(\"api/users\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify(user),\n      });\n      const data = await res.json();\n      this.users = [...this.users, data];\n\n      console.log(this.user);\n      // this last line is to clear the text after submit\n      this.user = {\n        img: \"janeth carton.jpg\",\n        name: \"\",\n        role: \"\",\n        liveLocation: \"Riviera State 32/106\",\n        address1: \"\",\n        address2: \"\",\n        phone: \"\",\n      };\n      this.showAddBox = false;\n    },\n    async updateLocation(updatedUser) {\n      console.log(\n        updatedUser.coordinates.lat,\n        updatedUser.coordinates.lng,\n        \"newUser\"\n      );\n      const API_KEY = process.env.API_KEY;\n      const API_URL = `https://maps.googleapis.com/maps/api/geocode/json?address=${updatedUser.address1}+${updatedUser.address2}&key=${API_KEY}`;\n      const apiResponse = await fetch(API_URL);\n      const locationData = await apiResponse.json();\n      updatedUser.coordinates.lat =\n        locationData.results[0].geometry.location.lng;\n      updatedUser.coordinates.lng =\n        locationData.results[0].geometry.location.lat;\n    },\n\n    async getLocation(newUser) {\n      const API_KEY = \"AIzaSyDkWzva7dAFQTO6rQVxZZawYTrcuo04PfI\";\n      const API_URL = `https://maps.googleapis.com/maps/api/geocode/json?address=${newUser.address1}+${newUser.address2}&key=${API_KEY}`;\n      const apiResponse = await fetch(API_URL);\n      const locationData = await apiResponse.json();\n      console.log(locationData, \"location\");\n      console.log(locationData.results[0].geometry.location.lng, \"lng\");\n      console.log(locationData.results[0].geometry.location.lat, \"lat\");\n      console.log(this.user.coordinates.lat, \"edit user lat\");\n      this.user.coordinates.lat = locationData.results[0].geometry.location.lng;\n      this.user.coordinates.lng = locationData.results[0].geometry.location.lat;\n    },\n\n    async deleteUser(id) {\n      const res = await fetch(`api/users/${id}`, {\n        method: \"DELETE\",\n      });\n      res.status === 200\n        ? (this.users = this.users.filter((user) => user.id !== id))\n        : alert(\"Error deleting user\");\n    },\n  },\n};\n</script>\n\n<style src=\"./Box.css\" scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}